<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.3.5
    site: https://github.com/ksky521/nodePPT
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Angular Directive Basic - By fengye</title>
    <link rel="stylesheet" media="all" href="css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="css/phone.css">

    <link rel="stylesheet" href="js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="css/font-awesome.css">

<link rel="stylesheet" href="css/theme.moon.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Angular Directive Basic</h1>
<h2>演讲者：fengye</h2>
<style>
    .text-left { text-align: left; }
    slides>slide .slide-wrapper { max-width: 100%; text-align: left;}
    h1, h2 { text-align: center; }

</style><script>
var base = document.createElement('base');
base.href = location.origin;
if (base.href.indexOf('github') !== 0) {
base.href += '/slideshow/publish';
document.head.appendChild(base);
} else {
document.head.appendChild(base);
}
</script>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>指令基础</h1>
<div class="subSlide"><article>
<h2>什么是 Directives</h2>
<pre><code>At a high level, directives are markers on a DOM element (such as an attribute, element name, comment or CSS class)
that tell AngularJS&#39;s HTML compiler ($compile) to attach a specified behavior to that DOM element (e.g. via event listeners),
or even to transform the DOM element and its children.
</code></pre><p>这是angular文档的介绍。 directive主要就是创建自定义的标签/标签属性/class/注释，通过<code>$compile</code>编译链接自定义的js逻辑处理或者dom结构转换</p>

</article></div>
<div class="subSlide"><hgroup>
<h2>指令类型</h2>
<p>正如之前的定义所说，directive有四种类型</p>
<pre><code>&lt;my-dir&gt;&lt;/my-dir&gt;
&lt;span my-dir=&quot;exp&quot;&gt;&lt;/span&gt;
&lt;!-- directive: my-dir exp --&gt;
&lt;span class=&quot;my-dir: exp;&quot;&gt;&lt;/span&gt;
</code></pre><pre><code>Best Practice: Prefer using directives via tag name and attributes over comment and class names.
Doing so generally makes it easier to determine what directives a given element matches.
</code></pre>
</hgroup><article>

<p>关于IE: 推荐使用属性<code>&lt;div my-dir&gt;&lt;/div&gt;</code>. <a href="https://code.angularjs.org/1.2.28/docs/guide/ie" target="_blank">IE guide</a></p>

</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>自定义指令</h1>
<div class="subSlide"><article>
<h2>Api: module.directive</h2>
<pre><code>To register a directive, you use the module.directive API. module.directive takes the normalized directive name followed by a factory function.
This factory function should return an object with the different options to tell $compile how the directive should behave when matched.
</code></pre>
</article></div>
<div class="subSlide"><article>
<h2>常用的options</h2>

</article></div>
<div class="subSlide"><article>
<h3>option.restrict</h3>
<pre><code>总共有 EACM 四种，可设置多个值。没有设置时默认为&quot;EA&quot;

    E - Element name (default): &lt;my-directive&gt;&lt;/my-directive&gt;
    A - Attribute (default): &lt;div my-directive=&quot;exp&quot;&gt;&lt;/div&gt;
    C - Class: &lt;div class=&quot;my-directive: exp;&quot;&gt;&lt;/div&gt;
    M - Comment: &lt;!-- directive: my-directive exp --&gt;
</code></pre>
</article></div>
<div class="subSlide"><article>
<iframe data-src="examples/option-restrict.html" src="about:blank;"></iframe>
</article></div>
<div class="subSlide"><article>
<h3>option.template</h3>
<pre><code>默认替换掉里面的内容
    - 字符串模版， 如 &lt;div red-on-hover&gt;{{delete_str}}&lt;/div&gt;.
    - 返回字符串模版的函数，有两个参数可用：tElement and tAttrs
</code></pre><h3>option.templateUrl</h3>
<pre><code>异步获取给定的url内容，即便加进了$templateCache，也同样是异步去获取
     - url字符串， 如 abc.html.
     - 返回url的函数，有两个参数可用：tElement and tAttrs
</code></pre><h3>option.transclude/option.replace</h3>
<pre><code>replace设为ture时，替换掉自身
transclude设为true时，里面的内容会被放到模版里设置了 `ng-transclude` 的标签
</code></pre>
</article></div>
<div class="subSlide"><article>
<iframe data-src="examples/option-template.html" src="about:blank;"></iframe>
</article></div>
<div class="subSlide"><article>
<h3>option.scope</h3>
<pre><code>- false: 默认值，沿用父元素scope
- true: 创建一个子scope，从父元素原型继承，值的改变是隔离的
- {}: 创建一个独立的scope，不从父元素原型继承
</code></pre>
</article></div>
<div class="subSlide"><article>
<iframe data-src="examples/option-scope.html" src="about:blank;"></iframe>
</article></div>
<div class="subSlide"><article>
<h3>option.link</h3>
<pre><code>用来自定义DOM操作，事件,scope操作的函数，有五个参数： scope, element, attrs, ctrl, transcludeFn。常用前三个。
    function link(scope, element, attrs) { ... }
    - scope: directive的scope object
    - element: jqLite封装过的 object
    - attrs: directive所属标签属性的key－value object
</code></pre>
</article></div>
<div class="subSlide"><article>
<iframe data-src="examples/option-link.html" src="about:blank;"></iframe>
</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>谢谢 ^_^</h1>
<ul>
<li>本ppt的github地址: <ul>
<li>repo: <a href="https://github.com/maple-leaf/slideshow" target="_blank">https://github.com/maple-leaf/slideshow</a></li>
<li>slide: <a href="http://maple-leaf.github.io/slideshow/angular-directive" target="_blank">http://maple-leaf.github.io/slideshow/angular-directive/publish</a></li>
</ul>
</li>
<li>github账号: <a href="https://github.com/maple-leaf" target="_blank">@maple-leaf</a></li>
</ul>
<p><br><br></p>
<p>本ppt使用<a href="https://github.com/ksky521/nodePPT" target="_blank">nodePPT</a>编写</p>

</article></section></slide>


        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.3.5</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="/js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="/js/mixjs/lib/event/broadcast.js"></script>
<script src="/js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'slide',
    width: 1100,
    dir: './',

    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },

    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>


<!--placeholder-->
</body>
</html>
